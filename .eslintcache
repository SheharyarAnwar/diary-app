[{"H:\\Bootcamp_2020\\diaries-app\\src\\index.tsx":"1","H:\\Bootcamp_2020\\diaries-app\\src\\reportWebVitals.ts":"2","H:\\Bootcamp_2020\\diaries-app\\src\\App.tsx":"3","H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\server.tsx":"4","H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Controllers\\users.tsx":"5","H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Factories\\index.tsx":"6","H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Models\\index.tsx":"7","H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Common\\error.tsx":"8","H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Controllers\\diary.tsx":"9","H:\\Bootcamp_2020\\diaries-app\\src\\Store\\index.tsx":"10","H:\\Bootcamp_2020\\diaries-app\\src\\Validation\\index.tsx":"11","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\TextField\\index.tsx":"12","H:\\Bootcamp_2020\\diaries-app\\src\\Views\\Auth\\index.tsx":"13","H:\\Bootcamp_2020\\diaries-app\\src\\Views\\Auth\\styles.tsx":"14","H:\\Bootcamp_2020\\diaries-app\\src\\Views\\Dashboard\\index.tsx":"15","H:\\Bootcamp_2020\\diaries-app\\src\\Views\\Dashboard\\styles.tsx":"16","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Sidebar\\index.tsx":"17","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Sidebar\\styles.tsx":"18","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Diary\\index.tsx":"19","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Diary\\styles.tsx":"20","H:\\Bootcamp_2020\\diaries-app\\src\\theme.tsx":"21","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Diary\\Entry\\index.tsx":"22","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Editor\\index.tsx":"23","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Editor\\styles.tsx":"24","H:\\Bootcamp_2020\\diaries-app\\src\\axiosConfig.tsx":"25","H:\\Bootcamp_2020\\diaries-app\\src\\Store\\Slices\\User\\userReducer.tsx":"26","H:\\Bootcamp_2020\\diaries-app\\src\\Store\\Slices\\Diary\\diaryReducer.tsx":"27"},{"size":590,"mtime":1610213333498,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1537,"mtime":1610380820713,"results":"31","hashOfConfig":"29"},{"size":1362,"mtime":1610446733041,"results":"32","hashOfConfig":"29"},{"size":1192,"mtime":1610361850963,"results":"33","hashOfConfig":"29"},{"size":363,"mtime":1610131143449,"results":"34","hashOfConfig":"29"},{"size":276,"mtime":1610133234153,"results":"35","hashOfConfig":"29"},{"size":203,"mtime":1610136910041,"results":"36","hashOfConfig":"29"},{"size":3837,"mtime":1610450295209,"results":"37","hashOfConfig":"29"},{"size":1059,"mtime":1610393605046,"results":"38","hashOfConfig":"29"},{"size":446,"mtime":1610368823791,"results":"39","hashOfConfig":"29"},{"size":602,"mtime":1610296775207,"results":"40","hashOfConfig":"29"},{"size":2344,"mtime":1610375405682,"results":"41","hashOfConfig":"29"},{"size":342,"mtime":1610221151879,"results":"42","hashOfConfig":"29"},{"size":817,"mtime":1610376874333,"results":"43","hashOfConfig":"29"},{"size":118,"mtime":1610377115371,"results":"44","hashOfConfig":"29"},{"size":4035,"mtime":1610448821509,"results":"45","hashOfConfig":"29"},{"size":1079,"mtime":1610355039866,"results":"46","hashOfConfig":"29"},{"size":3972,"mtime":1610454934438,"results":"47","hashOfConfig":"29"},{"size":381,"mtime":1610302365639,"results":"48","hashOfConfig":"29"},{"size":1511,"mtime":1610354875628,"results":"49","hashOfConfig":"29"},{"size":1641,"mtime":1610446868012,"results":"50","hashOfConfig":"29"},{"size":2668,"mtime":1610445472865,"results":"51","hashOfConfig":"29"},{"size":541,"mtime":1610356883244,"results":"52","hashOfConfig":"29"},{"size":953,"mtime":1610362046095,"results":"53","hashOfConfig":"29"},{"size":1577,"mtime":1610454934189,"results":"54","hashOfConfig":"29"},{"size":1400,"mtime":1610454830227,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"y25rwv",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Bootcamp_2020\\diaries-app\\src\\index.tsx",[],["119","120"],"H:\\Bootcamp_2020\\diaries-app\\src\\reportWebVitals.ts",[],"H:\\Bootcamp_2020\\diaries-app\\src\\App.tsx",["121","122"],"import React, { useEffect } from \"react\";\nimport { store, persistor } from \"./Store\";\nimport {\n  Routes,\n  Route,\n  Navigate,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport Auth from \"./Views/Auth/index\";\nimport Dashboard from \"./Views/Dashboard\";\nimport { ToastContainer } from \"react-toastify\";\nimport theme from \"./theme\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nfunction App() {\n  useEffect(() => {}, []);\n  return (\n    <>\n      <Provider store={store}>\n        {/* <PersistGate loading={null} persistor={persistor}> */}\n        <ThemeProvider theme={theme}>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={2000}\n            hideProgressBar={true}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss={false}\n            draggable={false}\n            pauseOnHover={false}\n          />\n          <Router>\n            <Routes>\n              <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n              <Route path=\"/login\" element={<Auth type=\"login\" />}></Route>\n              <Route path=\"/signup\" element={<Auth type=\"signup\" />}></Route>\n              <Route path=\"/diaries\" element={<Dashboard />} />\n            </Routes>\n          </Router>\n        </ThemeProvider>\n        {/* </PersistGate> */}\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\server.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Controllers\\users.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Factories\\index.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Models\\index.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Common\\error.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Mirage\\Controllers\\diary.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Store\\index.tsx",["123","124","125"],"import {\r\n  configureStore,\r\n  createStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { reduceEachTrailingCommentRange } from \"typescript\";\r\nimport { DiaryState } from \"./Slices/Diary/types\";\r\nimport { UserState } from \"./Slices/User/types\";\r\nimport userReducer from \"./Slices/User/userReducer\";\r\nimport diaryReducer from \"./Slices/Diary/diaryReducer\";\r\n\r\nexport interface RootState {\r\n  userReducer: UserState;\r\n  diaryReducer: DiaryState;\r\n}\r\nconst reducer = combineReducers({\r\n  // here we will be adding reducers\r\n  userReducer,\r\n  diaryReducer,\r\n});\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false,\r\n  }),\r\n});\r\n\r\nlet persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","H:\\Bootcamp_2020\\diaries-app\\src\\Validation\\index.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Components\\TextField\\index.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Views\\Auth\\index.tsx",["126"],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport TextField from \"../../Components/TextField/index\";\r\nimport { yupValidationSchema } from \"../../Validation/index\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport styles from \"./styles\";\r\nimport { authenticateUser } from \"../../Store/Slices/User/userReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { RootState } from \"../../Store\";\r\n\r\nconst Index: React.FC<AuthProps> = ({ type }) => {\r\n  const classes = styles();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const authenticated = useSelector(\r\n    (state: RootState) => state.userReducer.isAuthenticated\r\n  );\r\n  useEffect(() => {\r\n    authenticated && navigate(\"/diaries\");\r\n  }, [authenticated]);\r\n  const initialValues: FormikValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={yupValidationSchema}\r\n        initialErrors={{\r\n          username: \"Username Is Required\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          dispatch(authenticateUser({ ...values, authenticationAction: type }));\r\n        }}\r\n      >\r\n        <Form>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-around\"\r\n            alignItems=\"center\"\r\n            flexDirection=\"column\"\r\n            className={classes.root}\r\n          >\r\n            <Typography variant=\"subtitle2\">{type.toUpperCase()}</Typography>\r\n            <TextField placeholder=\"Username\" name=\"username\" type=\"text\" />\r\n            <TextField placeholder=\"Password\" name=\"password\" type=\"password\" />\r\n            <Button type=\"submit\" variant={\"contained\"}>\r\n              {type.toUpperCase()}\r\n            </Button>\r\n            {type === \"login\" ? (\r\n              <Typography variant=\"subtitle2\">\r\n                No Account? <NavLink to=\"/signup\">Create One</NavLink>\r\n              </Typography>\r\n            ) : null}\r\n          </Box>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\ninterface FormikValues {\r\n  username: string;\r\n  password: string;\r\n}\r\ninterface AuthProps {\r\n  type: \"login\" | \"signup\";\r\n}\r\n","H:\\Bootcamp_2020\\diaries-app\\src\\Views\\Auth\\styles.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Views\\Dashboard\\index.tsx",["127"],"import React, { useEffect } from \"react\";\r\n// import { Grid, Box, Typography } from \"@material-ui/core\";\r\n// import styles from \"./styles\";\r\n// import clsx from \"clsx\";\r\nimport Sidebar from \"../../Components/Sidebar/index\";\r\nimport Editor from \"../../Components/Editor\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { RootState } from \"./../../Store/index\";\r\nconst Index: React.FC = () => {\r\n  // const classes = styles();\r\n  const navigate = useNavigate();\r\n  const isAuthenticated = useSelector(\r\n    (state: RootState) => state.userReducer.isAuthenticated\r\n  );\r\n  useEffect(() => {\r\n    !isAuthenticated && navigate(\"/\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Sidebar>\r\n        <Editor />\r\n      </Sidebar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\diaries-app\\src\\Views\\Dashboard\\styles.tsx",["128"],"import { makeStyles } from \"@material-ui/core\";\r\nconst drawerWidth = 300;\r\nconst style = makeStyles((theme) => ({}));\r\nexport default style;\r\n",["129","130"],"H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Sidebar\\index.tsx",["131","132"],"import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  Drawer,\r\n  IconButton,\r\n  ListItemIcon,\r\n  TextField,\r\n  Toolbar,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Diary from \"../Diary/index\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport styles from \"./styles\";\r\n\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { RootState } from \"./../../Store/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Diary as DiaryI } from \"./../../Mirage/Interfaces/Diary.interface\";\r\nimport {\r\n  createDiary,\r\n  getDiariesByUserId,\r\n} from \"../../Store/Slices/Diary/diaryReducer\";\r\n\r\nconst Index: React.FC = ({ children }) => {\r\n  const classes = styles();\r\n  const [drawerOpen, setDrawerOpen] = useState<boolean>(true);\r\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\r\n  const [title, setTitle] = useState<string>(\"My Diary\");\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector((state: RootState) => state.userReducer.id);\r\n  const diary = useSelector((state: RootState) => state.diaryReducer.diaries);\r\n  const theme = useTheme();\r\n  const toggleDrawer = () => {\r\n    setDrawerOpen((prev) => !prev);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getDiariesByUserId(userId as string));\r\n  }, []);\r\n  const handleAddIconClicked = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    event.stopPropagation();\r\n    setDialogOpen(true);\r\n  };\r\n  useEffect(() => {\r\n    console.log(diary, \"+++++++++++++++\");\r\n  }, [diary]);\r\n  const addDiary = () => {\r\n    setDialogOpen(false);\r\n    dispatch(createDiary({ title, type: \"private\", userId: userId as string }));\r\n  };\r\n  let renderedLinks =\r\n    diary &&\r\n    diary.map((val) => {\r\n      console.log(val, \"diary info\");\r\n      return <Diary {...val} />;\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onBackdropClick={() => {\r\n          setDialogOpen(false);\r\n        }}\r\n      >\r\n        <Box\r\n          width=\"300px\"\r\n          height=\"300px\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"space-around\"\r\n          alignItems=\"center\"\r\n        >\r\n          <DialogTitle id=\"simple-dialog-title\">Create Diary</DialogTitle>\r\n          <TextField\r\n            label=\"Diary Title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <Button onClick={addDiary} variant=\"contained\">\r\n            Create Diary\r\n          </Button>\r\n        </Box>\r\n      </Dialog>\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={toggleDrawer}\r\n          edge=\"start\"\r\n          className={clsx(classes.menuButton, drawerOpen && classes.hide)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={drawerOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={toggleDrawer}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <ListItemIcon\r\n          onClick={handleAddIconClicked}\r\n          style={{ margin: \"0 auto\" }}\r\n        >\r\n          <AddCircleIcon titleAccess=\"Add Entry\" />\r\n        </ListItemIcon>\r\n        {renderedLinks}\r\n      </Drawer>\r\n      <Box\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: drawerOpen,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {children}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Sidebar\\styles.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Diary\\index.tsx",["133","134","135"],"import {\r\n  Collapse,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import styles from \"./styles\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nimport Entry from \"./Entry\";\r\nimport { Diary as DiaryProps } from \"../../Mirage/Interfaces/Diary.interface\";\r\nimport { Entry as EntryI } from \"../../Mirage/Interfaces/Entry.interface\";\r\nimport http from \"../../axiosConfig\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../Store\";\r\nimport {\r\n  getDiariesByUserId,\r\n  triggerEntryUpdate,\r\n} from \"../../Store/Slices/Diary/diaryReducer\";\r\n\r\nconst Index: React.FC<DiaryProps> = ({ title, id }) => {\r\n  const [open, setOpen] = React.useState(true);\r\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\r\n  const [entry, setEntry] = useState<EntryI[]>([]);\r\n  const [selectedEntry, setSelectedEntry] = React.useState(\"\");\r\n  const userId = useSelector((state: RootState) => state.userReducer.id);\r\n  const [entryTitle, setEntryTitle] = useState<string>(\"My Entry\");\r\n  const dispatch = useDispatch();\r\n  const entryChanges = useSelector(\r\n    (state: RootState) => state.diaryReducer.entryUpdated\r\n  );\r\n  useEffect(() => {\r\n    http.get(`/diaries/entries/${id}`).then((response) => {\r\n      setEntry(response.data.entries);\r\n    });\r\n  }, [entryChanges]);\r\n  const handleEntrySelection = (id: string) => {\r\n    setSelectedEntry(id);\r\n  };\r\n  const renderedEntries =\r\n    entry &&\r\n    entry.map((val) => {\r\n      return (\r\n        <Entry\r\n          selected={selectedEntry === val.id}\r\n          onClick={handleEntrySelection}\r\n          {...val}\r\n        />\r\n      );\r\n    });\r\n  const addEntry = () => {\r\n    setDialogOpen(false);\r\n    http\r\n      .post(`/diaries/entry/${id}`, {\r\n        title: entryTitle,\r\n        content: \"\",\r\n      })\r\n      .then((response) => {\r\n        setEntry((prev) => [...prev, response.data.entry]);\r\n      });\r\n  };\r\n  const handleDeleteEntry = () => {\r\n    console.log(\"delete diary clicked\", userId);\r\n    http.delete(`diaries/${id}`).then(() => {\r\n      dispatch(getDiariesByUserId(userId as string));\r\n      dispatch(triggerEntryUpdate());\r\n    });\r\n    setDialogOpen(false);\r\n  };\r\n  const handleAddIconClicked = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    event.stopPropagation();\r\n    setDialogOpen(true);\r\n  };\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onBackdropClick={() => {\r\n          setDialogOpen(false);\r\n        }}\r\n      >\r\n        <Box\r\n          width=\"300px\"\r\n          height=\"300px\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"space-around\"\r\n          alignItems=\"center\"\r\n        >\r\n          <DialogTitle id=\"simple-dialog-title\">Create Entry</DialogTitle>\r\n          <TextField\r\n            label=\"Entry Title\"\r\n            value={entryTitle}\r\n            onChange={(e) => setEntryTitle(e.target.value)}\r\n          />\r\n          <Button onClick={addEntry} variant=\"contained\">\r\n            Create Entry\r\n          </Button>\r\n        </Box>\r\n      </Dialog>\r\n      <List style={{ width: \"100%\" }}>\r\n        <ListItem button onClick={handleClick}>\r\n          <ListItemText primary={title} />\r\n\r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <ListItemIcon\r\n            onClick={handleAddIconClicked}\r\n            style={{ transform: \"translateX(380%)\" }}\r\n          >\r\n            <AddCircleIcon titleAccess=\"Add Entry\" />\r\n          </ListItemIcon>\r\n          <List component=\"div\" disablePadding>\r\n            {renderedEntries}\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Diary\\styles.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\theme.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Diary\\Entry\\index.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Editor\\index.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Components\\Editor\\styles.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\axiosConfig.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Store\\Slices\\User\\userReducer.tsx",[],"H:\\Bootcamp_2020\\diaries-app\\src\\Store\\Slices\\Diary\\diaryReducer.tsx",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":2,"column":17,"nodeType":"142","messageId":"143","endLine":2,"endColumn":26},{"ruleId":"140","severity":1,"message":"144","line":17,"column":10,"nodeType":"142","messageId":"143","endLine":17,"endColumn":21},{"ruleId":"140","severity":1,"message":"145","line":3,"column":3,"nodeType":"142","messageId":"143","endLine":3,"endColumn":14},{"ruleId":"140","severity":1,"message":"146","line":9,"column":10,"nodeType":"142","messageId":"143","endLine":9,"endColumn":40},{"ruleId":"140","severity":1,"message":"147","line":28,"column":7,"nodeType":"142","messageId":"143","endLine":28,"endColumn":23},{"ruleId":"148","severity":1,"message":"149","line":22,"column":6,"nodeType":"150","endLine":22,"endColumn":21,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":19,"column":6,"nodeType":"150","endLine":19,"endColumn":8,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"154","line":2,"column":7,"nodeType":"142","messageId":"143","endLine":2,"endColumn":18},{"ruleId":"136","replacedBy":"155"},{"ruleId":"138","replacedBy":"156"},{"ruleId":"140","severity":1,"message":"157","line":24,"column":19,"nodeType":"142","messageId":"143","endLine":24,"endColumn":25},{"ruleId":"148","severity":1,"message":"158","line":44,"column":6,"nodeType":"150","endLine":44,"endColumn":8,"suggestions":"159"},{"ruleId":"140","severity":1,"message":"160","line":17,"column":8,"nodeType":"142","messageId":"143","endLine":17,"endColumn":25},{"ruleId":"148","severity":1,"message":"161","line":46,"column":6,"nodeType":"150","endLine":46,"endColumn":20,"suggestions":"162"},{"ruleId":"140","severity":1,"message":"163","line":72,"column":9,"nodeType":"142","messageId":"143","endLine":72,"endColumn":26},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"@typescript-eslint/no-unused-vars","'persistor' is defined but never used.","Identifier","unusedVar","'PersistGate' is defined but never used.","'createStore' is defined but never used.","'reduceEachTrailingCommentRange' is defined but never used.","'persistedReducer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["166"],"React Hook useEffect has missing dependencies: 'isAuthenticated' and 'navigate'. Either include them or remove the dependency array.",["167"],"'drawerWidth' is assigned a value but never used.",["164"],["165"],"'DiaryI' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["168"],"'DeleteOutlineIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["169"],"'handleDeleteEntry' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [authenticated, navigate]",{"range":"178","text":"179"},"Update the dependencies array to be: [isAuthenticated, navigate]",{"range":"180","text":"181"},"Update the dependencies array to be: [dispatch, userId]",{"range":"182","text":"183"},"Update the dependencies array to be: [entryChanges, id]",{"range":"184","text":"185"},[859,874],"[authenticated, navigate]",[690,692],"[isAuthenticated, navigate]",[1473,1475],"[dispatch, userId]",[1636,1650],"[entryChanges, id]"]